i=49
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(diff(x,5))-min(diff(x,5)))/sd(x)
i=53
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(diff(x,5))-min(diff(x,5)))/sd(x)
i=53
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/sd(x)
i=49
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/sd(x)
i=675
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/sd(x)
i=92
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/sd(x)
i=103
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/sd(x)
i=193
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/sd(x)
i=283
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/sd(x)
i=283
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/mean(abs(diff(x,5)))
i=675
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/mean(abs(diff(x,5)))
i=271
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/mean(abs(diff(x,5)))
i=49
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))-min(abs(diff(x,5))))/mean(abs(diff(x,5)))
i=49
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))/min(abs(diff(x,5))))
i=675
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
(max(abs(diff(x,5)))/min(abs(diff(x,5))))
f <- function(x, width=7) {       # width = size of moving window in time steps
w <- width / length(x)
y <- lowess(x, f=w)           # The smooth
r <- zoo(x - y$y)             # Its residuals, structured for the next step
z <- rollapply(r, width, IQR) # The running estimate of variability
r/z                           # The diagnostic series: residuals scaled by IQRs
}
plot(x,ty='l')
f(x)
plot(f(x))
library(bfast)
install.packages('bfast')
library(bfast)
?bfast
bfast(x)
bfast(ts(x))
bfast(ts(x),season='none')
?lowess
plot(s)
plot(x)
lines(lowess(x),col=2)
pp_values=foreach (i = 1:length(floss_6sT_a))%dopar%{
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(s)$p.value
}
pp_values=foreach (i = 1:length(floss_6sT_a))%dopar%{
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
}
sum(pp_values<0.05)
sum(pp_values<0.05,na.rm=TRUE)
i=675
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=2
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=4
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=15
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=17
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=19
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=49
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=23
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=40
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=53
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=55
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=83
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=82
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
ur.za.fast(x,'both')@teststat
ur.za(x)@teststat
i=90
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
ur.za(x)@teststat
i=99
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
ur.za(x)@teststat
i=140
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=145
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
ur.za(x)@teststat
i=153
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
i=154
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
str(PP.test(x))
source('~/Documents/Meetings_2012/Rfunctions/measures_financial.R')
i=118
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(x)$p.value
model=ar.ols(detrend(x),order.max=1)
summary(model)
str(model)
Box.test(model$resid,fitdf=1)
plot(detrend(x),ty='l')
plot((x),ty='l')
i=365
plot((x),ty='l')
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
plot((x),ty='l')
plot(detrend(x),ty='l')
model=ar.ols(detrend(x),order.max=1)
Box.test(model$resid,fitdf=1)
detrend
n = length(x)
t = seq(1, n)
r = lm(x ~ t)
r
i=497
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
plot(detrend(x),ty='l')
model=ar.ols(detrend(x),order.max=1)
Box.test(model$resid,fitdf=1)
n = length(x)
t = seq(1, n)
r = lm(x ~ t)
r
MannKendall(x)$tau
library(Kendall)
MannKendall(x)$tau
i=482
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
MannKendall(x)$tau
MannKendall(x)#p.value
?MannKendall
i=497
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
MannKendall(x)$p.value
MannKendall(x)$sl
i=477
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
MannKendall(x)$sl
i=464
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
MannKendall(x)$sl
install.packages('coin')
i=497
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
plot((x),ty='l')
library(tseries)
kpss.test(x,null='Trend')
kpss.test(x)
PP.test(x)
i=504
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
kpss.test(x,null='Trend')
i=682
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]]
PP.test(detrend(x))
source('~/Documents/Meetings_2012/Rfunctions/measures_financial.R')
i=49
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
i=675
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
i=53
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
i=477
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
i=348
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
i=283
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
i=198
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
i=195
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
source('~/Documents/Meetings_2012/Rfunctions/measures_financial.R')
casemeasures=foreach (i=1:length(floss_6sT_a),.combine=rbind) %dopar% {
measures_financial(floss_6sT[(floss_6sT_a[i]):(floss_6sT_b[i])],floss_6sT_a[i],floss_6sT_b[i])
}
tranmeasures=matrix(0,length(floss_6sT_a),dim(casemeasures)[2])
for (i in 1:dim(casemeasures)[2]){
x=casemeasures[,i]
if (min(x,na.rm=TRUE)<=0){
x=1+casemeasures[,i]-min(casemeasures[,i],na.rm=TRUE)
}else{
x=x}
tranmeasures[,i]=(x)^boxcoxfit(x)$lambda}
pc.cr <- princomp(scale(tranmeasures))
hr <- hclust(dist(pc.cr$scores[, 1:5]),method='ward')
mycl <- as.numeric(cutree(hr, k=6))
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=mycl)
cln6=list()
k=6
cm6=matrix(NA,k,dim(casemeasures)[2])
for (i in 1:k){
cln6[[i]]=which(mycl==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
print(xtable(t(cm6)),type="html")
cm6
casemeasures=casemeasures[,-5]
library(geoR)
tranmeasures=matrix(0,length(floss_6sT_a),dim(casemeasures)[2])
for (i in 1:dim(casemeasures)[2]){
x=casemeasures[,i]
if (min(x,na.rm=TRUE)<=0){
x=1+casemeasures[,i]-min(casemeasures[,i],na.rm=TRUE)
}else{
x=x}
tranmeasures[,i]=(x)^boxcoxfit(x)$lambda}
pc.cr <- princomp(scale(tranmeasures))
#hr <- hclust(dist(pc.cr$scores[, 1:5]),method='ward')
#mycl <- as.numeric(cutree(hr, k=6))
#mycol <- c(gray(0.1),gray(0.3),gray(0.4),gray(0.5),gray(0.7),gray(0.85),gray(1))
cc=kmeans(scale(tranmeasures),6)
mycl=cc$cluster
mycol <- sample(rainbow(10))
mycol <- mycol[as.vector(mycl)]
#heatmap(pc.cr$scores[, 1:5], Rowv=as.dendrogram(hr), Colv=NA, RowSideColors=mycol,labRow='')
cln6=list()
k=6
cm6=matrix(NA,k,dim(casemeasures)[2])
for (i in 1:k){
cln6[[i]]=which(mycl==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
cm6
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=mycl)
summary(pc.cr)
i=53
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
length(mycl)
i=675
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
cc=kmeans(scale(tranmeasures),4)
mycl=cc$cluster
mycol <- sample(rainbow(10))
mycol <- mycol[as.vector(mycl)]
#heatmap(pc.cr$scores[, 1:5], Rowv=as.dendrogram(hr), Colv=NA, RowSideColors=mycol,labRow='')
cln6=list()
k=6
cm6=matrix(NA,k,dim(casemeasures)[2])
for (i in 1:k){
cln6[[i]]=which(mycl==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=mycl)
mycl=cc$cluster
mycol <- sample(rainbow(10))
mycol <- mycol[as.vector(mycl)]
#heatmap(pc.cr$scores[, 1:5], Rowv=as.dendrogram(hr), Colv=NA, RowSideColors=mycol,labRow='')
cln6=list()
k=6
cm6=matrix(NA,k,dim(casemeasures)[2])
for (i in 1:k){
cln6[[i]]=which(mycl==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
cm6
cc=kmeans(scale(tranmeasures),5)
mycl=cc$cluster
mycol <- sample(rainbow(10))
mycol <- mycol[as.vector(mycl)]
#heatmap(pc.cr$scores[, 1:5], Rowv=as.dendrogram(hr), Colv=NA, RowSideColors=mycol,labRow='')
cln6=list()
k=6
cm6=matrix(NA,k,dim(casemeasures)[2])
for (i in 1:k){
cln6[[i]]=which(mycl==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=mycl)
which.min(pca.dim2)
i=702
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
casemeasures=foreach (i=1:length(floss_6sT_a),.combine=rbind) %dopar% {
measures_financial(floss_6sT[(floss_6sT_a[i]):(floss_6sT_b[i])],floss_6sT_a[i],floss_6sT_b[i])
}
casemeasures=casemeasures[-702,-5]
library(geoR)
tranmeasures=matrix(0,length(floss_6sT_a)-1,dim(casemeasures)[2])
for (i in 1:dim(casemeasures)[2]){
x=casemeasures[,i]
if (min(x,na.rm=TRUE)<=0){
x=1+casemeasures[,i]-min(casemeasures[,i],na.rm=TRUE)
}else{
x=x}
tranmeasures[,i]=(x)^boxcoxfit(x)$lambda}
pc.cr <- princomp(scale(tranmeasures))
#hr <- hclust(dist(pc.cr$scores[, 1:5]),method='ward')
#mycl <- as.numeric(cutree(hr, k=6))
#mycol <- c(gray(0.1),gray(0.3),gray(0.4),gray(0.5),gray(0.7),gray(0.85),gray(1))
cc=kmeans(scale(tranmeasures),4)
mycl=cc$cluster
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=mycl)
cln6=list()
k=4
cm6=matrix(NA,k,dim(casemeasures)[2])
for (i in 1:k){
cln6[[i]]=which(mycl==i)
if (!is.array(casemeasures[cln6[[i]],])){
cm6[i,]=(casemeasures[cln6[[i]],])
}else{
cm6[i,]=colMeans(casemeasures[cln6[[i]],])}}
colnames(cm6)=colnames(casemeasures)
cm6
cc=kmeans(scale(tranmeasures),5)
mycl=cc$cluster
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=mycl)
i=353
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
i=272
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
i=353
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
hist(x)
i=40
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
hist(x)
i=779
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
i=353
x=floss_6sT[floss_6sT_a[i]:floss_6sT_b[i]];measures_financial(x)
cc=kmeans(scale(tranmeasures),6,iter.max=1000)
mycl=cc$cluster
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=mycl)
cc=kmeans(scale(tranmeasures),5,iter.max=1000)
mycl=cc$cluster
pca.dim1 <- pc.cr$scores[,1]
pca.dim2 <- pc.cr$scores[,2]
plot(pca.dim1,pca.dim2,col=mycl)
publish(user = "yanfei.kang@monash.edu", repo = "REPO")
slidify('presubmission.Rmd')
setwd('~/Documents/Conferences&Presentations/Presubmission/')
slidify('presubmission.Rmd')
publish(user = "yanfei.kang@monash.edu", repo = "REPO")
publish(user = "ykang
", repo = "REPO")
publish(user = "ykang", repo = "REPO")
publish(user = "ykang", repo = "REPO")
setwd('~/Documents/Conferences&Presentations/Presubmission/')
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "REPO")
publish(user = "ykang", repo = "REPO")
?publish
publish_github(repo, username = getOption("ykang"))
publish_github(presubmission, username = getOption("ykang"))
publish_github('presubmission', username = getOption("ykang"))
publish(user = "ykang", repo = "presubmission")
?publish
setwd('~/Dropbox/Public/Mid-review/')
slidify('index.Rmd')
publish(user = "ykang", repo = "Mid-review")
setwd('~/Documents/Conferences&Presentations/Presubmission/')
bib <- read.bib("copy.bib")
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "presubmission")
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "presubmission")
publish(user = "ykang", repo = "presubmission")
plot.1d
plot.density
saveGIF
library(knitr)
saveGIF
library(animation)
saveGIF
?saveGIF
source('~/Documents/Meetings_2012/R/eventDetection/R/aniplot.events.R', echo=TRUE)
source('~/Documents/Meetings_2012/R/eventDetection/R/plot.events.R', echo=TRUE)
setwd('~/Documents/Conferences&Presentations/Presubmission/')
publish(user = 'ykang', repo = 'presubmission')
publish_github('presubmission', username = getOption("ykang"))
publish_github(presubmission, username = getOption("ykang"))
publish_github('presubmission', username = getOption("ykang"))
?publish_github
publish_github('pss', username = getOption("ykang"))
publish(user = 'ykang', repo = 'pss')
publish(user = 'ykang', repo = 'presubmission')
publish_github('pss', username = getOption("ykang"))
publish_github('presubmission', username = getOption("ykang"))
getwd()
publish(user = "ykang", repo = "REPO")
publish(user = "ykang", repo = "pss")
publish_github('pss', username = getOption("ykang"))
slidify('presubmission.Rmd')
publish_github('pss', username = getOption("ykang"))
publish_github('pss', username = getOption("ykang"))
slidify('presubmission.Rmd')
publish_github('pss', username = getOption("ykang"))
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "pss")
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "presubmission")
publish(user = "ykang", repo = "presubmission")
setwd('~/Documents/Conferences&Presentations/Presubmission/')
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "presubmission")
publish(user = "ykang", repo = "presubmission")
publish(user = "ykang", repo = "presubmission")
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "presubmission")
setwd('~/Documents/Conferences&Presentations/Presubmission/')
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "presubmission")
publish(user = "ykang", repo = "pss-slides")
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "pss-slides")
publish(user = "ykang", repo = "pss-slides")
publish(user = "ykang", repo = "presubmission")
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "presubmission")
publish(user = "ykang", repo = "presubmission")
setwd('presubmission/')
publish(user = "ykang", repo = "presubmission")
setwd('~/Documents/Conferences&Presentations/Presubmission/presubmission/')
library(knitciations)
bib <- read.bib("copy.bib")
library(knitciations)
library(knitcitaions)
library(knitcitations)
bib <- read.bib("copy.bib")
slidify('presubmission.Rmd')
library(knitcitations)
bib <- read.bib("copy.bib")
bib[6]
slidify('presubmission.Rmd')
setwd('~/Documents/Conferences&Presentations/Presubmission/presubmission/')
library(slidify)
publish(user = "ykang", repo = "presubmission")
publish(user = "ykang", repo = "presubmission")
slidify('presubmission.Rmd')
slidify('presubmission.Rmd')
bib <- read.bib("copy.bib")
bib <- read.bib("copy.bib")
slidify('presubmission.Rmd')
publish(user = "ykang", repo = "presubmission")
setwd('~/Documents/Conferences&Presentations/Presubmission/')
publish(user = "ykang", repo = "presubmission")
